dialog.open-document {
  width: 80%;
  height: 80%;
  padding-top: 2.4em;
  div.list {
    width: 100%;
    height: 100%;
    background-color: rgb(240, 240, 240);
    border: solid 1px transparent;
    overflow-y: auto;
    &:focus-visible {
      border-color: black;
      outline: none;
    }

    button {
      width: 2.4em;
      height: 2.4em;
      background-color: transparent;
      border-bottom: solid 1px transparent;
      border-right: solid 1px transparent;
      border-top: none;
      border-left: none;
      border-radius: 1.2em;
      &:focus-visible,
      &:hover {
        border-bottom: solid 1px rgba(0, 0, 0, 0.3);
        border-right: solid 1px rgba(0, 0, 0, 0.3);
        border-top: none;
        border-left: none;
      }
      &:active {
        border-bottom: none;
        border-right: none;
        border-top: solid 1px rgba(0, 0, 0, 0.3);
        border-left: solid 1px rgba(0, 0, 0, 0.3);
      }
      &:focus-visible {
        outline: none;
      }
    }

    div.list-item,
    div.list-item-new {
      div.list-item-title {
        text-wrap: nowrap;
        overflow-x: hidden;
        text-overflow: ellipsis;
        flex: 1 1;
      }
      div.list-item-last-modified {
        text-wrap: nowrap;
        flex: 0 0 10em;
      }
      div.list-item-buttons {
        display: flex;
        align-items: center;
        text-wrap: nowrap;
        padding-right: 2px;
        flex: 0 0 2.4em * 3;
        &:empty::after {
          content: '';
        }
      }
    }

    div.list-item {
      display: flex;
      flex-flow: row;
      justify-content: space-between;
      align-items: center;
      height: 2.6em;
      outline: none;
      &[data-selected],
      &:hover {
        background-color: rgb(224, 224, 224);
      }
      &[data-selected] {
        font-weight: bold;
      }
      button {
        opacity: 0;
        visibility: hidden;
        pointer-events: none;
        transition: opacity 1s;

        @at-root #{selector-replace(&, 'div.list-item', 'div.list-item:hover')} {
          pointer-events: auto;
          visibility: visible;
          opacity: 1;
        }
        @at-root #{selector-replace(&, 'div.list-item', 'div.list-item[data-selected]')} {
          opacity: 1;
          visibility: visible;
        }
      }
      button[name='another-tab'] {
        position: relative;
        &::before {
          content: '';
          display: block;
          position: absolute;
          bottom: 0.6em;
          left: 0.6em;
          width: 0.9em;
          height: 0.9em;
          border: solid 1px currentColor;
        }
        &::after {
          content: '↗';
          display: block;
          position: absolute;
          bottom: 0.7em;
          left: 1.1em;
        }
      }
      button[name='open'] {
        &::after {
          content: '▶';
        }
      }
      button[name='delete'] {
        &::after {
          content: '\01f5d1\0fe0f';
        }
      }
    }
    div.list-item-new {
      display: flex;
      flex-flow: row;
      justify-content: space-between;
      align-items: center;
      height: 2.6em;
      button {
        margin-left: 5px;
        width: 8em;
        &::after {
          content: '➕新しいメモ';
        }
      }
      // リストが空のときの代替文字列
      &:last-child {
        flex-flow: column;
        background-color: transparent;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        .list-item-title {
          flex: 0 0 auto;
          &:before {
            content: '保存されたメモがありません。';
            display: block;
          }
          button {
            margin: 0 auto;
            display: block;
          }
        }
        .list-item-last-modified,
        .list-item-buttons {
          display: none;
        }
      }
    }
  }
  button[value="cancel"] {
    width: 2.4em;
    height: 2.4em;
    position: absolute;
    top: 0;
    right: 0;
    background-color: transparent;
    border-radius: 50%;
    border-top: solid 1px transparent;
    border-left: solid 1px transparent;
    border-bottom: none;
    border-right: none;
    &:hover {
      border-top: none;
      border-left: none;
      border-bottom: solid 1px lightgray;
      border-right: solid 1px lightgray;
    }
    &:active {
      border-top: solid 1px lightgray;
      border-left: solid 1px lightgray;
      border-bottom: none;
      border-right: none;
    }
    &::after {
      content: '❌';
    }
    &:disabled {
      display: none;
    }
  }
}
